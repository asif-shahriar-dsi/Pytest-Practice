{"uid":"4c7e8303db028e5f","name":"test_loginWithInvalidPassword","fullName":"Practice.project.runner.Test_Run2#test_loginWithInvalidPassword","historyId":"82437cc170312070a063d674017561f2","time":{"start":1697954216930,"stop":1697954221953,"duration":5023},"status":"broken","statusMessage":"TypeError: 'NoneType' object is not iterable","statusTrace":"def test_loginWithInvalidPassword():\n        global driver\n        login = Login(registration.LOGIN_EMAIL, \"bla bla\")\n        driver.get(\"https://demo.nopcommerce.com\")\n>       login.login_with_wrong_password(driver)\n\nPractice\\project\\runner\\Test_Run2.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPractice\\project\\testcases\\Login.py:37: in login_with_wrong_password\n    email.send_keys(self.login_email)\nd:\\PyENVs\\SeleniumTest\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:232: in send_keys\n    Command.SEND_KEYS_TO_ELEMENT, {\"text\": \"\".join(keys_to_typing(value)), \"value\": keys_to_typing(value)}\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nvalue = (None,)\n\n    def keys_to_typing(value: Iterable[AnyKey]) -> List[str]:\n        \"\"\"Processes the values that will be typed in the element.\"\"\"\n        characters: List[str] = []\n        for val in value:\n            if isinstance(val, Keys):\n                # Todo: Does this even work?\n                characters.append(val)\n            elif isinstance(val, (int, float)):\n                characters.extend(str(val))\n            else:\n>               characters.extend(val)\nE               TypeError: 'NoneType' object is not iterable\n\nd:\\PyENVs\\SeleniumTest\\lib\\site-packages\\selenium\\webdriver\\common\\utils.py:138: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1697954161631,"stop":1697954161700,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"test_setup","time":{"start":1697954211664,"stop":1697954216930,"duration":5266},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"afterStages":[{"name":"test_setup::0","time":{"start":1697954221969,"stop":1697954222035,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"parentSuite","value":"Practice.project.runner"},{"name":"suite","value":"Test_Run2"},{"name":"host","value":"DESKTOP-VKMD5TF"},{"name":"thread","value":"34112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Practice.project.runner.Test_Run2"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"4c7e8303db028e5f.json","parameterValues":[]}