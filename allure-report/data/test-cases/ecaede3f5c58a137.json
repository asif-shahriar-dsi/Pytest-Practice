{"uid":"ecaede3f5c58a137","name":"test_login","fullName":"Practice.project.runner.Test_Run2#test_login","historyId":"dc3aa4e5320e17c6a2e0017717d91790","time":{"start":1697956429571,"stop":1697956451698,"duration":22127},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Log out\"}\n  (Session info: headless MicrosoftEdge=118.0.2088.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6CCEE8952+63554]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6CCE72472+257794]\n\t(No symbol) [0x00007FF6CCC51139]\n\t(No symbol) [0x00007FF6CCC96098]\n\t(No symbol) [0x00007FF6CCC961A9]\n\t(No symbol) [0x00007FF6CCCCC717]\n\t(No symbol) [0x00007FF6CCCB4C3F]\n\t(No symbol) [0x00007FF6CCC8B541]\n\t(No symbol) [0x00007FF6CCCCA21B]\n\t(No symbol) [0x00007FF6CCCB49D3]\n\t(No symbol) [0x00007FF6CCC8A574]\n\t(No symbol) [0x00007FF6CCC89C40]\n\t(No symbol) [0x00007FF6CCC8ACF4]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF6CD0A8BD9+1121529]\n\t(No symbol) [0x00007FF6CCCF7BB6]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6CCDC1DBA+33914]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6CCDBA759+3609]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF6CD0A7C54+1117556]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6CCE7C728+299448]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6CCE774B4+278340]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6CCE775E2+278642]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6CCE6A9A1+226353]\n\tBaseThreadInitThunk [0x00007FFD636B7344+20]\n\tRtlUserThreadStart [0x00007FFD653826B1+33]","statusTrace":"@pytest.mark.run(order=1)\n    def test_login():\n        global driver\n        if registration.LOGIN_EMAIL is None:\n            login = Login(\"ambernelson@example.org\", \"@SG7VTim48\")\n        else:\n            login = Login(registration.LOGIN_EMAIL, registration.LOGIN_PASSWORD)\n    \n        driver.get(\"https://demo.nopcommerce.com\")\n>       login.login(driver)\n\nPractice\\project\\runner\\Test_Run2.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPractice\\project\\testcases\\Login.py:26: in login\n    logOutBtn = driver.find_element(By.LINK_TEXT, \"Log out\").is_displayed()\nd:\\PyENVs\\SeleniumTest\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:739: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nd:\\PyENVs\\SeleniumTest\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x04D6DD70>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...E6A9A1+226353]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD636B7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFD653826B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Log out\"}\nE         (Session info: headless MicrosoftEdge=118.0.2088.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6CCEE8952+63554]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6CCE72472+257794]\nE       \t(No symbol) [0x00007FF6CCC51139]\nE       \t(No symbol) [0x00007FF6CCC96098]\nE       \t(No symbol) [0x00007FF6CCC961A9]\nE       \t(No symbol) [0x00007FF6CCCCC717]\nE       \t(No symbol) [0x00007FF6CCCB4C3F]\nE       \t(No symbol) [0x00007FF6CCC8B541]\nE       \t(No symbol) [0x00007FF6CCCCA21B]\nE       \t(No symbol) [0x00007FF6CCCB49D3]\nE       \t(No symbol) [0x00007FF6CCC8A574]\nE       \t(No symbol) [0x00007FF6CCC89C40]\nE       \t(No symbol) [0x00007FF6CCC8ACF4]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF6CD0A8BD9+1121529]\nE       \t(No symbol) [0x00007FF6CCCF7BB6]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6CCDC1DBA+33914]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6CCDBA759+3609]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF6CD0A7C54+1117556]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6CCE7C728+299448]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6CCE774B4+278340]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6CCE775E2+278642]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6CCE6A9A1+226353]\nE       \tBaseThreadInitThunk [0x00007FFD636B7344+20]\nE       \tRtlUserThreadStart [0x00007FFD653826B1+33]\n\nd:\\PyENVs\\SeleniumTest\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1697956423215,"stop":1697956423268,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"test_setup","time":{"start":1697956423268,"stop":1697956429571,"duration":6303},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"afterStages":[{"name":"test_setup::0","time":{"start":1697956451763,"stop":1697956451787,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"run(order=1)"},{"name":"parentSuite","value":"Practice.project.runner"},{"name":"suite","value":"Test_Run2"},{"name":"host","value":"DESKTOP-VKMD5TF"},{"name":"thread","value":"30012-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Practice.project.runner.Test_Run2"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=1)"]},"source":"ecaede3f5c58a137.json","parameterValues":[]}